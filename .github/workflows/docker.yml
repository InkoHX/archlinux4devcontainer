name: Docker

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

env:
  IMAGE_NAME: archlinux

permissions:
  contents: read
  packages: write

jobs:
  base:
    name: Base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker Metadata
        uses: docker/metadata-action@v4
        id: metadata
        with:
          images: ghcr.io/inkohx/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=base
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: ./base
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  node:
    name: Node.js ${{ matrix.node }}
    needs: base
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [20, 18, 16]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker Metadata
        uses: docker/metadata-action@v4
        id: metadata
        with:
          images: ghcr.io/inkohx/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=node-${{ matrix.node }}
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: ./node
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            NODE_VERSION=${{ matrix.node }}

  deno:
    name: Deno
    needs: base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker Metadata
        uses: docker/metadata-action@v4
        id: metadata
        with:
          images: ghcr.io/inkohx/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=deno
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: ./deno
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  bun:
    name: Bun
    needs: base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v3

      - name: Docker Metadata
        uses: docker/metadata-action@v4
        id: metadata
        with:
          images: ghcr.io/inkohx/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=bun
      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v2
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v4
        with:
          context: ./bun
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
