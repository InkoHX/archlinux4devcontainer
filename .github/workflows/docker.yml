name: Docker

on:
  workflow_dispatch:
  schedule:
    - cron: "0 0 * * 1"
  push:
    branches: ["main"]
  pull_request:
    branches: ["main"]

concurrency:
  group: ${{ github.workflow }}-${{ github.ref }}
  cancel-in-progress: true

env:
  IMAGE_NAME: archlinux
  TEST_IMAGE_NAME: inkohx/archlinux:test

permissions:
  contents: read
  packages: write

jobs:
  base:
    name: Base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker Metadata
        uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ghcr.io/inkohx/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=base

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ./base
          load: true
          tags: ${{ env.TEST_IMAGE_NAME }}

      - uses: moonrepo/setup-toolchain@v0
        with:
          auto-install: true

      - name: Install dependencies
        run: bun install

      - name: Test
        run: bun ./base/test.ts
        env:
          DOCKER_IMAGE: ${{ env.TEST_IMAGE_NAME }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ./base
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  node:
    name: Node.js ${{ matrix.node }}
    needs: base
    runs-on: ubuntu-latest

    strategy:
      matrix:
        node: [21, 20, 18]

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker Metadata
        uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ghcr.io/inkohx/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=node-${{ matrix.node }}

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ./node
          load: true
          tags: ${{ env.TEST_IMAGE_NAME }}

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.25

      - name: Install dependencies
        run: bun install

      - name: Test
        run: bun ./node/test.ts
        env:
          DOCKER_IMAGE: ${{ env.TEST_IMAGE_NAME }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ./node
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
          build-args: |
            NODE_VERSION=${{ matrix.node }}

  deno:
    name: Deno
    needs: base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker Metadata
        uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ghcr.io/inkohx/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=deno

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ./deno
          load: true
          tags: ${{ env.TEST_IMAGE_NAME }}

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.25

      - name: Install dependencies
        run: bun install

      - name: Test
        run: bun ./deno/test.ts
        env:
          DOCKER_IMAGE: ${{ env.TEST_IMAGE_NAME }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ./deno
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  bun:
    name: Bun
    needs: base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker Metadata
        uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ghcr.io/inkohx/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=bun

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ./bun
          load: true
          tags: ${{ env.TEST_IMAGE_NAME }}

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.25

      - name: Install dependencies
        run: bun install

      - name: Test
        run: bun ./bun/test.ts
        env:
          DOCKER_IMAGE: ${{ env.TEST_IMAGE_NAME }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ./bun
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}

  rust:
    name: Rust
    needs: base
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v4

      - name: Docker Metadata
        uses: docker/metadata-action@v5
        id: metadata
        with:
          images: ghcr.io/inkohx/${{ env.IMAGE_NAME }}
          tags: |
            type=raw,value=rust

      - name: Login to GitHub Container Registry
        if: github.event_name != 'pull_request'
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ./rust
          load: true
          tags: ${{ env.TEST_IMAGE_NAME }}

      - uses: oven-sh/setup-bun@v1
        with:
          bun-version: 1.0.25

      - name: Install dependencies
        run: bun install

      - name: Test
        run: bun ./rust/test.ts
        env:
          DOCKER_IMAGE: ${{ env.TEST_IMAGE_NAME }}

      - name: Build and push Docker images
        uses: docker/build-push-action@v5
        with:
          context: ./rust
          push: ${{ github.event_name != 'pull_request' }}
          tags: ${{ steps.metadata.outputs.tags }}
          labels: ${{ steps.metadata.outputs.labels }}
